<?xml version="1.0" encoding="utf-8"?>
<CDADescriptor>

    <DataSources>
        <Connection id="defaultConnection" type="mondrian.jndi">
            <Jndi>java:comp/env/euDevFinDS</Jndi>
			<Catalog>./financial.mondrian.xml</Catalog>
			<Cube>Financial</Cube>
			<Property name=""></Property>
        </Connection>
        <Connection id="defaultConnectionLocale" type="mondrian.jndi">
            <Jndi>java:comp/env/euDevFinDS</Jndi>
			<Catalog>./financial.mondrian.xml;DynamicSchemaProcessor=org.devgateway.eudevfin.cda.utils.SchemaProcessor;</Catalog>
			<Cube>Financial</Cube>
        </Connection>
        <Connection id="sqlConnection" type="sql.jndi">
            <Jndi>java:comp/env/euDevFinDS</Jndi>
        </Connection>
    </DataSources>

	<!-- used for testing (CDASimpleMDXTest.java) -->
	<DataAccess id="simpleMDXQuery" connection="defaultConnection" type="mdx" access="public">
		<Name>Simple Sector MDX query</Name>
		<Query>
			<![CDATA[
			SELECT
			NON EMPTY {Hierarchize({[Sector].[Name].Members})} ON COLUMNS,
			NON EMPTY {[Measures].[Commitments Amount]} ON ROWS
			FROM [Financial]
		]]>
		</Query>
	</DataAccess>

	<DataAccess id="netODATable"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>Net ODA Table</Name>
		<Parameters>
			<Parameter default="EUR (million)" name="REPORT_CURRENCY_CODE" type="String"/>
			<Parameter default="2011" name="YEAR2" type="Integer"/>
			<Parameter default="2012" name="YEAR1" type="Integer"/>
			<Parameter default="2013" name="YEAR" type="Integer"/>
		</Parameters>
		<Query>
			<![CDATA[
			WITH
			MEMBER Measures.[Curent (USD)] AS [Measures].[Net Amount]
			MEMBER Measures.[${REPORT_CURRENCY_CODE}] AS [Measures].[Net Amount Currency]
			MEMBER Measures.[ODA/GNI] AS SUM(CrossJoin({[Type of Finance].[Name].[GNI: Gross National Income]}, {[Measures].[Extended Amount]}))
			MEMBER Measures.[Bilateral share] AS (SUM(CrossJoin({[Type of Finance].[Name].[NON FLOW ITEMS]}, {[Measures].[NumberOfTransactions]})) / SUM(CrossJoin({[Type of Finance].[Name].Members}, {[Measures].[NumberOfTransactions]}))) * 100
			SELECT
			{{[Reporting Year].[${YEAR2}], [Reporting Year].[${YEAR1}], [Reporting Year].[${YEAR}]}} ON COLUMNS,
			{[Measures].[Curent (USD)], [Measures].[${REPORT_CURRENCY_CODE}], Measures.[ODA/GNI], Measures.[Bilateral share]} ON ROWS
			FROM [Financial]
			WHERE ([Type of Flow].[Name].[ODA (Official Development Assistance)])
		]]>
		</Query>
	</DataAccess>

	<DataAccess id="topTenRecipients"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>Top 10 recipients table</Name>
		<Query>
			<![CDATA[
			SELECT
			NON EMPTY {[Measures].[Net Amount Currency]} ON COLUMNS,
			TOPCOUNT([Country].[Name].Members, 10, [Measures].[Net Amount Currency]) ON ROWS
			FROM [Financial]
			WHERE {[Type of Flow].[Name].[ODA (Official Development Assistance)]}
		]]>
		</Query>
	</DataAccess>

	<DataAccess id="topTenMemoShare"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>Top 10 memo share</Name>
		<Query>
			<![CDATA[
			WITH
			MEMBER Measures.[Top 5 recipients] AS (SUM(CrossJoin({TOPCOUNT([Country].[Name].Members, 5, [Measures].[NumberOfTransactions])}, {[Measures].[NumberOfTransactions]})) / SUM(CrossJoin({[Type of Finance].[Name].Members}, {[Measures].[NumberOfTransactions]}))) * 100
			MEMBER Measures.[Top 10 recipients] AS (SUM(CrossJoin({TOPCOUNT([Country].[Name].Members, 10, [Measures].[NumberOfTransactions])}, {[Measures].[NumberOfTransactions]})) / SUM(CrossJoin({[Type of Finance].[Name].Members}, {[Measures].[NumberOfTransactions]}))) * 100
			MEMBER Measures.[Top 20 recipients] AS (SUM(CrossJoin({TOPCOUNT([Country].[Name].Members, 20, [Measures].[NumberOfTransactions])}, {[Measures].[NumberOfTransactions]})) / SUM(CrossJoin({[Type of Finance].[Name].Members}, {[Measures].[NumberOfTransactions]}))) * 100
			SELECT
			NON EMPTY {Measures.[Top 5 recipients], Measures.[Top 10 recipients], Measures.[Top 20 recipients]} ON COLUMNS
			FROM [Financial]
			WHERE {[Type of Flow].[TYPE_OF_FLOW##10].[ODA (Official Development Assistance)]}
		]]>
		</Query>
	</DataAccess>

    <!-- queries used for the demo -->
    <DataAccess id="extendingAgenciesList"
                connection="defaultConnectionLocale"
                type="mdx"
                access="public">
	    <BandedMode>compact</BandedMode>
	    <Columns/>
		<Name>extendingAgenciesList MDX</Name>
        <Query>
        <![CDATA[
			SELECT
            NON EMPTY {[Measures].[Commitments Amount]} ON COLUMNS,
            NON EMPTY {[Extending Agency].[Acronym].Members} ON ROWS
            FROM [Financial]
		]]>
		</Query>       
    </DataAccess>

    <DataAccess id="sectorList"
                connection="defaultConnectionLocale"
                type="mdx"
                access="public">
	    <BandedMode>compact</BandedMode>
	    <Columns/>
        <Name>sectorList MDX</Name>
        <Query>
        <![CDATA[
            SELECT
            NON EMPTY {[Measures].[Commitments Amount]} ON COLUMNS,
            NON EMPTY {[Sector].[Name].Members} ON ROWS
            FROM [Financial]
        ]]>
        </Query>
    </DataAccess>

	<DataAccess id="biMultilateralList"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>biMultilateralList MDX</Name>
		<Query>
			<![CDATA[
            SELECT
			NON EMPTY {[Measures].[Commitments Amount]} ON COLUMNS,
			NON EMPTY {Hierarchize({[BiMultilateral].[Name].Members})} ON ROWS
			FROM [Financial]
        ]]>
		</Query>
	</DataAccess>

	<!--cache="true"-->
	<!--cacheDuration="172800"-->
	<DataAccess id="typeOfFinance"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>Table Dashboard MDX</Name>
		<Parameters>
			<Parameter default="[All Sectors]" name="app.sectorListParameter" type="String"/>
			<Parameter default="[All Extending Agencies]" name="app.extendingAgenciesListParameter" type="String"/>
			<Parameter default="[All BiMultilaterals]" name="app.biMultilateralListParameter" type="String"/>
		</Parameters>
		<Query>
			<![CDATA[
            SELECT
			Hierarchize(Union(CrossJoin({[Reporting Year].[2009]}, {[Measures].[Commitments Amount]}), Union(CrossJoin({[Reporting Year].[2010]}, {[Measures].[Commitments Amount]}), Union(CrossJoin({[Reporting Year].[2011]}, {[Measures].[Commitments Amount]}), Union(CrossJoin({[Reporting Year].[2012]}, {[Measures].[Commitments Amount]}), CrossJoin({[Reporting Year].[2013]}, {[Measures].[Commitments Amount]})))))) ON COLUMNS,
			NON EMPTY {Hierarchize({[Type of Finance].[Name].Members})} ON ROWS
			FROM [Financial]
			WHERE ([BiMultilateral].${app.biMultilateralListParameter}, [Extending Agency].${app.extendingAgenciesListParameter}, [Sector].${app.sectorListParameter})
        ]]>
		</Query>
	</DataAccess>

	<DataAccess id="typeOfAid"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>typeOfAid MDX</Name>
		<Parameters>
			<Parameter default="[All Sectors]" name="app.sectorListParameter" type="String"/>
			<Parameter default="[All Extending Agencies]" name="app.extendingAgenciesListParameter" type="String"/>
			<Parameter default="[All BiMultilaterals]" name="app.biMultilateralListParameter" type="String"/>
		</Parameters>
		<Query>
			<![CDATA[
            SELECT
			NON EMPTY {[Measures].[Commitments Amount]} ON COLUMNS,
			NON EMPTY {Hierarchize({[Type of Aid].[Name].Members})} ON ROWS
			FROM [Financial]
			WHERE ([BiMultilateral].${app.biMultilateralListParameter}, [Extending Agency].${app.extendingAgenciesListParameter}, [Sector].${app.sectorListParameter})
        ]]>
		</Query>
	</DataAccess>

	<DataAccess id="typeOfFlow"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>typeOfFlow MDX</Name>
		<Parameters>
			<Parameter default="[All Sectors]" name="app.sectorListParameter" type="String"/>
			<Parameter default="[All Extending Agencies]" name="app.extendingAgenciesListParameter" type="String"/>
			<Parameter default="[All BiMultilaterals]" name="app.biMultilateralListParameter" type="String"/>
		</Parameters>
		<Query>
			<![CDATA[
            SELECT
			NON EMPTY {[Measures].[Commitments Amount]} ON COLUMNS,
			NON EMPTY {Hierarchize({[Type of Flow].[Name].Members})} ON ROWS
			FROM [Financial]
			WHERE ([BiMultilateral].${app.biMultilateralListParameter}, [Extending Agency].${app.extendingAgenciesListParameter}, [Sector].${app.sectorListParameter})
        ]]>
		</Query>
	</DataAccess>

	<DataAccess id="typeOfSectorsByFlow"
	            connection="defaultConnectionLocale"
	            type="mdx"
	            access="public">
		<BandedMode>compact</BandedMode>
		<Columns/>
		<Name>typeOfSectorsByFlow MDX</Name>
		<Parameters>
			<Parameter default="[All Extending Agencies]" name="app.extendingAgenciesListParameter" type="String"/>
			<Parameter default="[All BiMultilaterals]" name="app.biMultilateralListParameter" type="String"/>
		</Parameters>
		<Query>
			<![CDATA[
			SELECT
			NON EMPTY {[Measures].[Net Amount]} ON COLUMNS,
			Union(CrossJoin({[Sector].[110].[EDUCATION]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[120].[HEALTH]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[140].[WATER AND SANITATION]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[150].[GOVERNMENT AND CIVIL SOCIETY]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[210].[TRANSPORT AND STORAGE]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[220].[COMMUNICATION]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[230].[ENERGY GENERATION AND SUPPLY]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[240].[BANKING AND FINANCIAL SERVICES]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[311].[AGRICULTURE]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[321].[INDUSTRY]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[323].[CONSTRUCTION]}, [Type of Flow].[Name].Members), Union(CrossJoin({[Sector].[700].[HUMANITARIAN AID]}, [Type of Flow].[Name].Members), CrossJoin({[Sector].[400].[MULTISECTOR/CROSS-CUTTING]}, [Type of Flow].[Name].Members))))))))))))) ON ROWS
			FROM [Financial]
			WHERE ([BiMultilateral].${app.biMultilateralListParameter}, [Extending Agency].${app.extendingAgenciesListParameter})
        ]]>
		</Query>
	</DataAccess>

</CDADescriptor>
