<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright (c) 2013 Development Gateway. ~ All rights reserved. This 
	program and the accompanying materials ~ are made available under the terms 
	of the GNU Public License v3.0 ~ which accompanies this distribution, and 
	is available at ~ http://www.gnu.org/licenses/gpl.html ~ ~ Contributors: 
	~ mpostelnicu -->

<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-2.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/integration/jmx http://www.springframework.org/schema/integration/jmx/spring-integration-jmx-2.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<jpa:repositories base-package="org.devgateway.eudevfin.exchange" />

	<!-- load properties regarding the openexchangerates service, url, params, 
		etc... -->
	
	<!-- channel where the request for the currencies is being made -->
	<int:channel id="currenciesJsonExchange" />
	<int:channel id="getCurrenciesJson" />
	<int:channel id="getHistoricalExchangeRateByIdChannel" />
	<int:channel id="createHistoricalExchangeRateChannel" />
	<int:channel id="deleteRatesForDateChannel" />
	<int:channel id="exchangeChannel" />
	<int:channel id="getExchangeRateChannel" />
	<int:channel id="fetchRatesForDateChannel"/>
	<int:channel id="findRatesForDateChannel"/>



	<!-- transformer turning json input to a linkedHashMap. There is no output 
		channel which means the response is sent back -->
	<int:json-to-object-transformer
		input-channel="currenciesJsonExchange" type="java.util.LinkedHashMap" />


	<int:gateway id="exchangeQueryService"
		service-interface="org.devgateway.eudevfin.exchange.service.ExternalExchangeQueryService" />


	<!-- simple http request factory, nothing special, just some timeouts set -->
	<bean id="exchangeRequestFactory"
		class="org.springframework.http.client.SimpleClientHttpRequestFactory">
		<property name="connectTimeout" value="5000" />
		<property name="readTimeout" value="5000" />
	</bean>


	<bean id="exchangeLiquibase" class="liquibase.integration.spring.SpringLiquibase" lazy-init="false"
		depends-on="contextHelper">
		<property name="dataSource" ref="euDevFinDataSource" />
		<property name="changeLog" value="classpath:exchangeDbChangelog.xml" />
	</bean>

	<int:header-value-router input-channel="exchangeChannel"
		header-name="requestName" />


  	<task:scheduler id="scheduler" pool-size="5"/>
  	<task:annotation-driven scheduler="scheduler" executor="executor"/>

</beans>
