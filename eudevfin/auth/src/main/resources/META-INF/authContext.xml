<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2013 Development Gateway. All rights reserved. This program 
	and the accompanying materials are made available under the terms of the 
	GNU Public License v3.0 which accompanies this distribution, and is available 
	at http://www.gnu.org/licenses/gpl.html Contributors: mpostelnicu -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jpa="http://www.springframework.org/schema/integration/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/integration/jpa http://www.springframework.org/schema/integration/jpa/spring-integration-jpa.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- we need a retrieving-outbound-gateway here to provide the Authentication 
		token -->


	<tx:annotation-driven />
	<int:annotation-config />
	<context:component-scan base-package="org.devgateway.eudevfin.auth" />
	<context:annotation-config />

	<jpa:repositories base-package="org.devgateway.eudevfin.auth.repository" />


	<!-- The following is invoking an sql script, upon context startup, but 
		after JPA initialization -->
	<jdbc:initialize-database data-source="euDevFinDataSource">
		<jdbc:script location="classpath:derby-auth-startup.sql" />
	</jdbc:initialize-database>


	<!-- The following is a bean reading the user details data from the databasae 
		through JDBC, and using the already initialized datasource -->
	<bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="euDevFinDataSource" />
	</bean>


	<!-- The following is an authenticationManager bean that has access to a 
		real userDetailsService. It receives requests from remote authentication 
		managers. See org.devgateway.eudevfin.auth.security.AuthenticationComponent -->
	<security:authentication-manager id="localAuthenticationManager">
		<security:authentication-provider
			user-service-ref="userDetailsService">
		</security:authentication-provider>
	</security:authentication-manager>




</beans>
